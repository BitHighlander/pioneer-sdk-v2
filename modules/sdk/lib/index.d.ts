export interface PioneerSDKConfig {
    appName?: string;
    appIcon?: string;
    blockchains: any;
    username: string;
    queryKey: string;
    spec: string;
    wss: string;
    paths: any;
    keepkeyApiKey: string;
    ethplorerApiKey: string;
    covalentApiKey: string;
    utxoApiKey: string;
    walletConnectProjectId: string;
}
export declare class SDK {
    private status;
    private username;
    private queryKey;
    private wss;
    private spec;
    private ethplorerApiKey;
    private covalentApiKey;
    private utxoApiKey;
    private walletConnectProjectId;
    private context;
    private assetContext;
    private blockchainContext;
    private pubkeyContext;
    private outboundAssetContext;
    private outboundBlockchainContext;
    private outboundPubkeyContext;
    private swapKit;
    private pioneer;
    private paths;
    private pubkeys;
    private wallets;
    private balances;
    private nfts;
    private events;
    private pairWallet;
    private setContext;
    refresh: () => Promise<any>;
    private setAssetContext;
    private setOutboundAssetContext;
    keepkeyApiKey: string;
    isPioneer: string | null;
    loadBalanceCache: (balances: any) => Promise<void>;
    loadPubkeyCache: (pubkeys: any) => Promise<void>;
    private getPubkeys;
    private getBalances;
    private blockchains;
    private clearWalletState;
    private setBlockchains;
    appName: string;
    private appIcon;
    constructor(spec: string, config: PioneerSDKConfig);
}
export default SDK;
